<!DOCTYPE html>
<html>
<head>
<style>
:root {
  --primary: #4ade80;
  --primary-dark: #22c55e;
  --secondary: #86efac;
  --bg-dark: #111827;
  --bg-card: #1f2937;
  --text: #f3f4f6;
  --text-secondary: #9ca3af;
}

body {
  margin: 0;
  min-height: 100vh;
  background: var(--bg-dark);
  font-family: system-ui, -apple-system, sans-serif;
  color: var(--text);
  display: flex;
  justify-content: center;
  align-items: center;
}

.dashboard {
  background: var(--bg-card);
  border-radius: 24px;
  padding: 32px;
  width: 800px;
  box-shadow: 0 20px 40px rgba(74, 222, 128, 0.1);
  position: relative;
  overflow: hidden;
}

.dashboard::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 8px;
  background: linear-gradient(90deg, var(--primary) var(--progress), var(--bg-dark) var(--progress));
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 32px;
}

.title {
  font-size: 24px;
  font-weight: bold;
  color: var(--text);
}

.progress-circle {
  width: 120px;
  height: 120px;
  border-radius: 50%;
  background: conic-gradient(var(--primary) var(--progress), var(--secondary) var(--progress));
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  animation: fillProgress 1.5s ease-out;
}

.progress-circle::before {
  content: '';
  position: absolute;
  width: 80%;
  height: 80%;
  background: var(--bg-card);
  border-radius: 50%;
}

.progress-text {
  position: relative;
  font-size: 24px;
  font-weight: bold;
  color: var(--text);
}

.modules {
  margin-top: 32px;
}

.module {
  background: var(--bg-dark);
  border-radius: 12px;
  padding: 20px;
  margin-bottom: 16px;
  display: flex;
  align-items: center;
  transition: transform 0.3s ease;
}

.module:hover {
  transform: translateX(8px);
}

.module-icon {
  width: 40px;
  height: 40px;
  background: var(--primary);
  border-radius: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 16px;
  color: var(--bg-dark);
  font-weight: bold;
}

.module-content {
  flex: 1;
}

.module-title {
  font-weight: 600;
  margin-bottom: 4px;
}

.seek-bar {
  height: 8px;
  background: var(--bg-card);
  border-radius: 4px;
  overflow: hidden;
  width: 200px;
}

.seek-bar-fill {
  height: 100%;
  background: var(--primary);
  border-radius: 4px;
  transition: width 1s ease;
}

.status {
  margin-left: 16px;
  font-weight: 600;
  color: var(--primary);
}

.completed {
  position: relative;
}

.completed::after {
  content: 'âœ“';
  position: absolute;
  right: 20px;
  color: var(--primary);
  font-size: 20px;
  font-weight: bold;
  animation: checkmark 0.5s ease-out;
}

.stats {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
  margin-top: 32px;
  padding-top: 32px;
  border-top: 2px solid var(--bg-dark);
}

.stat {
  text-align: center;
  padding: 20px;
  background: var(--bg-dark);
  border-radius: 12px;
  transition: transform 0.3s ease;
}

.stat:hover {
  transform: translateY(-4px);
}

.stat-value {
  font-size: 24px;
  font-weight: bold;
  color: var(--primary);
  margin-bottom: 8px;
}

.stat-label {
  color: var(--text-secondary);
  font-size: 14px;
}

@keyframes fillProgress {
  from { --progress: 0%; }
  to { --progress: 75%; }
}

@keyframes checkmark {
  from { transform: scale(0); }
  to { transform: scale(1); }
}

.confetti {
  position: absolute;
  width: 10px;
  height: 10px;
  background: var(--primary);
  animation: confetti 1s ease-out forwards;
  opacity: 0;
}

@keyframes confetti {
  0% { transform: translateY(0) rotate(0deg); opacity: 1; }
  100% { transform: translateY(-100px) rotate(720deg); opacity: 0; }
}
</style>
</head>
<body>
<div class="dashboard">
  <div class="header">
    <div>
      <div class="title">Course Progress</div>
      <p>You're doing great! Keep going!</p>
    </div>
    <div class="progress-circle">
      <div class="progress-text">75%</div>
    </div>
  </div>

  <div class="modules">
    <div class="module completed">
      <div class="module-icon">1</div>
      <div class="module-content">
        <div class="module-title">Introduction to Course</div>
        <div class="seek-bar">
          <div class="seek-bar-fill" style="width: 100%"></div>
        </div>
      </div>
      <div class="status">Completed</div>
    </div>

    <div class="module completed">
      <div class="module-icon">2</div>
      <div class="module-content">
        <div class="module-title">Basic Concepts</div>
        <div class="seek-bar">
          <div class="seek-bar-fill" style="width: 100%"></div>
        </div>
      </div>
      <div class="status">Completed</div>
    </div>

    <div class="module">
      <div class="module-icon">3</div>
      <div class="module-content">
        <div class="module-title">Advanced Topics</div>
        <div class="seek-bar">
          <div class="seek-bar-fill" style="width: 75%"></div>
        </div>
      </div>
      <div class="status">In Progress</div>
    </div>

    <div class="module">
      <div class="module-icon">4</div>
      <div class="module-content">
        <div class="module-title">Final Project</div>
        <div class="seek-bar">
          <div class="seek-bar-fill" style="width: 0%"></div>
        </div>
      </div>
      <div class="status">Locked</div>
    </div>
  </div>

  <div class="stats">
    <div class="stat">
      <div class="stat-value">12/16</div>
      <div class="stat-label">Lessons Completed</div>
    </div>
    <div class="stat">
      <div class="stat-value">8.5</div>
      <div class="stat-label">Hours Spent</div>
    </div>
    <div class="stat">
      <div class="stat-value">4</div>
      <div class="stat-label">Days Streak</div>
    </div>
  </div>
</div>

<script>
// Create confetti effect
function createConfetti() {
  const colors = ['#4ade80', '#22c55e', '#86efac'];
  for(let i = 0; i < 50; i++) {
    setTimeout(() => {
      const confetti = document.createElement('div');
      confetti.className = 'confetti';
      confetti.style.left = Math.random() * 100 + '%';
      confetti.style.background = colors[Math.floor(Math.random() * colors.length)];
      confetti.style.animationDelay = Math.random() * 1 + 's';
      document.querySelector('.dashboard').appendChild(confetti);
      
      // Remove confetti after animation
      setTimeout(() => confetti.remove(), 2000);
    }, i * 50);
  }
}

// Add click event to modules
document.querySelectorAll('.module').forEach(module => {
  module.addEventListener('click', () => {
    if(module.classList.contains('completed')) {
      createConfetti();
    }
  });
});
</script>
</body>
</html>